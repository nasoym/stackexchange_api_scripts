#!/usr/bin/env bash

set -eufo pipefail
trap 'echo "$0: error at line ${LINENO}: >$(cat $0 | sed -n "${LINENO}p")<"; exit 1' ERR
hash jq 2>/dev/null

while getopts "x:p:s:t:" options; do case $options in
  p) page="$OPTARG" ;;
  s) pagesize="$OPTARG" ;;
  t) tags="$OPTARG" ;;
  x) exclude_tags="$OPTARG" ;;
esac; done; shift $((OPTIND - 1))

[[ -r ~/.$(basename ${0})rc ]] && { source ~/.$(basename ${0})rc; }
: ${page:="1"}
: ${pagesize:="5"}
: ${site:="stackoverflow"}
: ${tags:=""}
: ${exclude_tags:=""}

if [[ "$#" -eq 0 ]];then :

elif [[ "$1" == "sites" ]];then shift
  curl -s \
    --compressed \
  "https://api.stackexchange.com/2.2/sites?access_token=${access_token}&key=${application_key}\
&page=${page}\
&pagesize=${pagesize}\
" \
| jq -M -r '.items|map(.api_site_parameter)[]'

elif [[ "$1" == "site_info" ]];then shift
  curl -s \
    --compressed \
    "https://api.stackexchange.com/2.2/info?site=${site}&access_token=${access_token}&key=${application_key}"

elif [[ "$1" == "search" ]];then shift
  [[ -n "$tags" ]] && { : ${tags_query:="&tagged=${tags}"}; }
  : ${tags_query:=""}
  [[ -n "$exclude_tags" ]] && { : ${exclude_tags_query:="&nottagged=${exclude_tags}"}; }
  : ${exclude_tags_query:=""}
  [[ -n "$exclude_tags" ]] && { : ${exclude_tags_query:="&nottagged=${exclude_tags}"}; }
  curl -s \
    --compressed \
    "https://api.stackexchange.com/2.2/search/excerpts\
?access_token=${access_token}&key=${application_key}\
&site=${site}\
&page=${page}\
&pagesize=${pagesize}\
${tags_query}\
${exclude_tags_query}\
&order=desc\
&sort=relevance\
&q=jvm+thread+kill\
&filter=total\
"
#   \
# | jq -M '.items|map({question_id,title,answer_count,score})[]'

# &filter=withbody\
# &title=jvm&title=kill&title=thread\
# &q=$(urlencode $@)\
# &order=desc\
# &sort=relevance\
# &answers=3\
# &order=asc\
# &order=desc\
# &sort=votes\
# &sort=activity\
# &title=$(urlencode $@)\

      # "last_activity_date": 1497253058,
      # "creation_date": 1490003714,
      # "question_id": 42900473,
      # "link": "https://stackoverflow.com/questions/42900473/kafka-consumers-throwing-java-lang-outofmemoryerror-direct-buffer-memory",
      # "title": "Kafka Consumers throwing java.lang.OutOfMemoryError: Direct buffer memory"

# ${FROM}\
#   f ) FROM="&fromdate=$OPTARG" ;;

elif [[ "$1" == "question" ]];then shift
  curl -s \
    --compressed \
    "https://api.stackexchange.com/2.2/questions/181615?access_token=${access_token}&key=${application_key}\
&site=${site}\
&filter=withbody\
"
  curl -s \
    --compressed \
    "https://api.stackexchange.com/2.2/questions/181615/answers?access_token=${access_token}&key=${application_key}\
&site=${site}\
&filter=withbody\
" \
| jq -M -r '.items|map(.body)[]'

else
  echo "unknown command: $1"

fi


# <https://api.stackexchange.com/docs/advanced-search#
# order=desc&
# sort=activity&
# title=bash%20history%20directory
# &filter=default
# &site=stackoverflow
# &run=true>
# # 57818  16-07-15T12:52:21 stackexchangesearch -h superuser
# "&title=bash&title=history&title=directory" | vim -c ':% ! jq -s ".[].title"'
# -c ':set hls' -
#
